{"/docs/":{"data":{"":"To see the details of each supported service, use the left navigation bar."},"title":"Wait4it"},"/docs/aerospike/":{"data":{"":"Aerospike Check validates connectivity to an Aerospike instance.","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to aerospike). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The port to check on the Aerospike host. 3000 ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to aerospike for Aerospike check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The port to check on the Aerospike host. 3000 ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. Multiple hosts and cluster checks are not supported at the moment. ","usage-with-binary#Usage with Binary":" ./wait4it -type=aerospike -h=127.0.0.1 -p=3000 -t=60 ","usage-with-docker#Usage with Docker":" docker run ph4r5h4d/wait4it -type=aerospike -h=127.0.0.1 -p=3000 -t=60 "},"title":"Aerospike"},"/docs/elasticsearch/":{"data":{"":"ElasticSearch Check validates connectivity to an ElasticSearch instance and optionally checks for username and password authentication (if the X-Pack extension is enabled).","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to elasticsearch). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The port to check on the ElasticSearch host. 9200 ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to elasticsearch for ElasticSearch check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The port to check on the ElasticSearch host. 9200 ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. Multiple hosts and cluster checks are not supported at the moment. Username/password authentication is only supported when the X-Pack extension is enabled. If X-Pack is not activated, the username and password are ignored. ","usage-with-binary#Usage with Binary":" ./wait4it -type=elasticsearch -h=http://127.0.0.1 -p=9200 -t=60 ","usage-with-docker#Usage with Docker":" docker run ph4r5h4d/wait4it -type=elasticsearch -h=http://127.0.0.1 -p=9200 -t=60 "},"title":"ElasitcSearch"},"/docs/http/":{"data":{"":"HTTP Check validates connectivity to an HTTP endpoint and optionally checks for specific status codes or text in the response.","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to http for HTTP check). - -t Timeout in seconds. 30 -h The HTTP endpoint to check. 127.0.0.1 -http-status Expected HTTP status code. 200 -http-text Substring to search for in the HTTP response. - -http-follow-redirect Whether to follow redirects (true or false). true ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to http for HTTP check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The HTTP endpoint to check. 127.0.0.1 W4IT_HTTP_STATUS_CODE Expected HTTP status code. 200 W4IT_HTTP_TEXT Substring to search for in the HTTP response. - W4IT_HTTP_FOLLOW_REDIRECT Whether to follow redirects (true or false). true ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. If W4IT_HTTP_STATUS_CODE is not defined, the check defaults to expecting status code 200. If W4IT_HTTP_TEXT is not defined, only the status code is checked. ","usage-with-binary#Usage with Binary":" ./wait4it -type=http -h=https://example.com -t=60 -http-status=200 -http-text=\"Welcome\" ","usage-with-docker#Usage with Docker":" docker run ph4r5h4d/wait4it -type=http -h=https://example.com -t=60 -http-status=200 -http-text=\"Welcome\" "},"title":"HTTP Check"},"/docs/installation/":{"data":{"installation-guide-for-wait4it#Installation Guide for Wait4it":"Installation Guide for Wait4itTo get started with Wait4it, you can either download the latest release or build it yourself. Follow the instructions below based on your preference.","option-1-download-the-latest-release#Option 1: Download the Latest Release":"The easiest way to get started is by downloading the latest release of Wait4it.\nVisit the Wait4it Releases Page. Download the appropriate binary for your operating system (Linux, macOS, or Windows). Extract the downloaded file and move it to a directory of your choice. Ensure that the directory is included in your system’s PATH to run Wait4it from anywhere in your terminal. ","option-2-build-wait4it-yourself#Option 2: Build Wait4it Yourself":"If you prefer to build Wait4it from source, follow these steps:\nPrerequisites Make sure you have Go installed on your machine.\nBuild Instructions Clone the Wait4it repository using git or the GitHub CLI:\nUsing git:\ngit clone https://github.com/ph4r5h4d/wait4it.git Using GitHub CLI (gh):\ngh repo clone ph4r5h4d/wait4it Navigate to the project directory:\ncd wait4it Build the project:\ngo build After the build process completes, the wait4it binary will be created in the current directory.\nMove the binary to a directory in your PATH for easy access:\nmv wait4it /usr/local/bin/ Verify the installation by running:\nwait4it --version Now you’re ready to start using Wait4it!\nFor more details, visit the Wait4it GitHub Repository."},"title":"Installation"},"/docs/memcached/":{"data":{"":"Memcached Check validates connectivity to a Memcached instance.","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to memcached). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The port to check on the Memcached host. 11211 ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to memcached for Memcached check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The port to check on the Memcached host. 11211 ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. Currently, multiple hosts and cluster checks are not supported. ","usage-with-binary#Usage with Binary":"./wait4it -type=memcached -h=127.0.0.1 -p=11211 -t=60","usage-with-docker#Usage with Docker":"docker run ph4r5h4d/wait4it -type=memcached -h=127.0.0.1 -p=11211 -t=60"},"title":"Memcached"},"/docs/mongodb/":{"data":{"":"MongoDB Check validates connectivity to a MongoDB instance.","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to mongo). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The port to check on the MongoDB host. 27017 -u The username for MongoDB authentication. - -P The password for MongoDB authentication. - ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to mongo for MongoDB check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The port to check on the MongoDB host. 27017 W4IT_USERNAME The username for MongoDB authentication. - W4IT_PASSWORD The password for MongoDB authentication. - ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. Currently, only username/password authentication mechanism is supported. ","usage-with-binary#Usage with Binary":" ./wait4it -type=mongo -h=127.0.0.1 -p=27017 -t=60 -u=mongoadmin -P=secret ","usage-with-docker#Usage with Docker":" docker run ph4r5h4d/wait4it -type=mongo -h=127.0.0.1 -p=27017 -t=60 -u=mongoadmin -P=secret "},"title":"MongoDB"},"/docs/mysql/":{"data":{"":"MySQL Check validates connectivity to a MySQL database and optionally checks for specific database availability.","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to mysql). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The port to check on the MySQL host. 3306 -u The username for MySQL authentication. - -P The password for MySQL authentication. - -n The name of the database to check. - ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to mysql for MySQL check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The port to check on the MySQL host. 3306 W4IT_USERNAME The username for MySQL authentication. - W4IT_PASSWORD The password for MySQL authentication. - W4IT_DBNAME The name of the database to check. - ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. Ensure that the specified MySQL database and username/password are correct for the connection to succeed. ","usage-with-binary#Usage with Binary":" ./wait4it -type=mysql -h=127.0.0.1 -p=3306 -t=60 -u=root -P=secret -n=app ","usage-with-docker#Usage with Docker":" docker run ph4r5h4d/wait4it -type=mysql -h=127.0.0.1 -p=3306 -t=60 -u=root -P=secret -n=app "},"title":"MySQL Check"},"/docs/postgresql/":{"data":{"":"PostgreSQL Check validates connectivity to a PostgreSQL database and optionally checks for SSL mode and database availability.","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to postgres). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The port to check on the PostgreSQL host. 5432 -u The username for PostgreSQL authentication. - -P The password for PostgreSQL authentication. - -n The name of the database to check. - -ssl Whether to enable or disable SSL mode for PostgreSQL (disable or enable). disable ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to postgres for PostgreSQL check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The port to check on the PostgreSQL host. 5432 W4IT_USERNAME The username for PostgreSQL authentication. - W4IT_PASSWORD The password for PostgreSQL authentication. - W4IT_DBNAME The name of the database to check. - W4IT_SSL_MODE Whether to enable or disable SSL mode for PostgreSQL (enable or disable). disable ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. If W4IT_SSL_MODE is not defined, SSL is disabled by default. Ensure that the specified PostgreSQL database, username, and password are correct for the connection to succeed. ","usage-with-binary#Usage with Binary":" ./wait4it -type=postgres -h=127.0.0.1 -p=5432 -t=60 -u=postgres -P=secret -ssl=disable ","usage-with-docker#Usage with Docker":" docker run ph4r5h4d/wait4it -type=postgres -h=127.0.0.1 -p=5432 -t=60 -u=postgres -P=secret -ssl=disable "},"title":"PostgreSQL Check"},"/docs/rabbitmq/":{"data":{"":"RabbitMQ Check validates connectivity to a RabbitMQ instance and optionally checks for username and password authentication.","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to rabbitmq). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The port to check on the RabbitMQ host. 5267 -u The username for RabbitMQ authentication. - -P The password for RabbitMQ authentication. - ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to rabbitmq for RabbitMQ check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The port to check on the RabbitMQ host. 5267 W4IT_USERNAME The username for RabbitMQ authentication. - W4IT_PASSWORD The password for RabbitMQ authentication. - ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. Ensure that the specified RabbitMQ username and password are correct for the connection to succeed. ","usage-with-binary#Usage with Binary":"./wait4it -type=rabbitmq -h=127.0.0.1 -p=5267 -t=60 -u=guest -P=guest","usage-with-docker#Usage with Docker":"docker run ph4r5h4d/wait4it -type=rabbitmq -h=127.0.0.1 -p=5267 -t=60 -u=guest -P=guest"},"title":"RabbitMQ"},"/docs/redis/":{"data":{"":"Redis Check validates connectivity to a Redis instance and optionally checks for authentication and operation mode (standalone or cluster).","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to redis). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The port to check on the Redis host. 6379 -P The password for Redis authentication (if any). - -operation-mode The Redis operation mode (standalone or cluster). standalone ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to redis for Redis check). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The port to check on the Redis host. 6379 W4IT_PASSWORD The password for Redis authentication (if any). - W4IT_OPERATION_MODE The Redis operation mode (standalone or cluster). standalone ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" ℹ️ Environment variables override command-line arguments. If W4IT_OPERATION_MODE is not defined, it defaults to standalone. Redis Sentinel is not supported yet. This version can only check one host within a Redis cluster; support for checking multiple hosts in a Redis cluster might be added upon request. ","usage-with-binary#Usage with Binary":" ./wait4it -type=redis -h=127.0.0.1 -p=6379 -t=60 -P=secret ","usage-with-docker#Usage with Docker":" docker run ph4r5h4d/wait4it -type=redis -h=127.0.0.1 -p=6379 -t=60 -P=secret "},"title":"Redis"},"/docs/tcp/":{"data":{"":"TCP Port Check validates connectivity to a specific TCP port on a target host within a given timeout.","command-line-arguments#Command-Line Arguments":" Argument Description Default -type The type of check (set to tcp). - -t Timeout in seconds. 30 -h The host to check. 127.0.0.1 -p The TCP port to check. - ","environment-variables#Environment Variables":" Variable Description Default W4IT_TYPE The type of check (set to tcp). - W4IT_TIMEOUT Timeout in seconds. 30 W4IT_HOST The host to check. 127.0.0.1 W4IT_PORT The TCP port to check. - ","exit-codes#Exit Codes":" Code Meaning 0 Connection successful. 1 Timed out. 2 Validation error or incorrect input. ","notes#Notes":" Environment variables override command-line arguments. Ensure the target host and port are reachable within the timeout period. ","usage-with-binary#Usage with Binary":" ./wait4it -type=tcp -h=127.0.0.1 -p=8080 -t=60 ","usage-with-docker#Usage with Docker":" docker run ph4r5h4d/wait4it -type=tcp -h=127.0.0.1 -p=8080 -t=60 "},"title":"TCP Port Check"}}